<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[阿道博客备份]]></title>
  <link href="https://backup.adao.me/atom.xml" rel="self"/>
  <link href="https://backup.adao.me/"/>
  <updated>2020-07-07T16:30:35+08:00</updated>
  <id>https://backup.adao.me/</id>
  <author>
    <name><![CDATA[]]></name>
    
  </author>
  <generator uri="http://www.mweb.im/">MWeb</generator>
  
  <entry>
    <title type="html"><![CDATA[Telegram（电报）创建Bot机器人方法及相关配置]]></title>
    <link href="https://backup.adao.me/15929739860951.html"/>
    <updated>2020-06-24T12:46:26+08:00</updated>
    <id>https://backup.adao.me/15929739860951.html</id>
    <content type="html"><![CDATA[
<h3 id="toc_0">准备工作</h3>

<ul>
<li>可以正常访问的telegram</li>
</ul>

<h3 id="toc_1">注册</h3>

<ul>
<li>打开telegram搜索“BotFather”</li>
<li>输入消息窗口敲入以下命令</li>
</ul>

<blockquote>
<p>/newbot</p>
</blockquote>

<p>显示：Alright, a new bot. How are we going to call it?</p>

<p>Please choose a name for your bot.</p>

<ul>
<li>填入机器人名称</li>
</ul>

<blockquote>
<p>这里我们输入任意名称</p>
</blockquote>

<p>会提示：Good. Now let&#39;s choose a username for your bot. It must end in <code>bot</code>. Like this, for example: TetrisBot or tetris_bot.</p>

<ul>
<li>名称格式要求为：TetrisBot or tetris_bot</li>
</ul>

<blockquote>
<p>输入 share45_bot 可以根据需求命名</p>
</blockquote>

<ul>
<li><p>如果显示：Sorry, this username is invalid.就需要更改</p></li>
<li><p>直到显示：Done! Congratulations on your new bot. You will find it at <strong>t.me/share45_bot</strong>. You can now add a description, about section and profile picture for your bot, see /help for a list of commands. By the way, when you&#39;ve finished creating your cool bot, ping our Bot Support if you want a better username for it. Just make sure the bot is fully operational before you do this.</p></li>
</ul>

<p>Use this token to access the HTTP API:</p>

<blockquote>
<p>xxxxxxxxxxxx 此处为api密钥（重要）</p>
</blockquote>

<p>Keep your token secure and store it safely, it can be used by anyone to control your bot.</p>

<p>For a description of the Bot API, see this page:</p>

<p><a href="https://core.telegram.org/bots/api">https://core.telegram.org/bots/api</a></p>

<p><img src="media/15929739860951/Snipaste_2019-06-27_19-07-36.jpg" alt="Snipaste_2019-06-27_19-07-36"/></p>

<h3 id="toc_2">机器人信息配置</h3>

<ul>
<li>这里我们继续输入消息来编辑机器人信息：</li>
</ul>

<blockquote>
<p>/mybots</p>
</blockquote>

<ul>
<li>就会出现我们创建的机器人列表，这里我们直接点击需要编辑的机器人名称即可。</li>
</ul>

<p>会显示六个选项：</p>

<blockquote>
<p>API Token：显示api密钥<br/>
Edit Bot：编辑机器人<br/>
Bot Settings：机器人设置<br/>
Payments：支付<br/>
Delete Bot：删除机器人<br/>
Back...ots List：返回上一级列表</p>
</blockquote>

<ul>
<li>我们主要说一下Edit Bot，点击这个按钮，同样是显示六个按钮：</li>
</ul>

<blockquote>
<p>Edit Name：机器人名称<br/>
Edit Description：机器人描述<br/>
Edit About：机器人介绍<br/>
Edit Botpic：机器人头像<br/>
Edit Commands：机器人命令<br/>
Back to bot：返回</p>
</blockquote>

<ul>
<li>这里我主要讲一下：Edit Commands 点击命令</li>
</ul>

<p>显示：OK. Send me a list of commands for your bot. Please use this format:</p>

<p>command1 - Description<br/>
command2 - Another description</p>

<ul>
<li>这里命令的设置需要结合后期机器人做用来设置，这里我就已后面要讲的rss订阅机器人来设置。</li>
</ul>

<blockquote>
<p>/rss  显示当前rss订阅地址 加raw显示地址链接<br/>
/sub 订阅一个rss：/sub  订阅网站地址<br/>
/unsub 退订一个rss：/unsub 退订网站地址<br/>
/unsubbthis 使用此命令回复想要退订的 RSS 消息即可退订<br/>
/export 导出为OPML</p>
</blockquote>

<h3 id="toc_3">最后检查</h3>

<p>搜索框搜索我们的机器人名称，进入到频道</p>

<p>就会看到我们之前设置好的相关信息</p>

<p>在消息输入框输入“/”就可以看到我们之前设置好的命令</p>

<p><img src="media/15929739860951/Snipaste_2019-06-25_18-58-10.jpg" alt="Snipaste_2019-06-25_18-58-10"/></p>

<p>如果有需要修改的内容，可以到BotFather进行再次设置</p>

<p>至此，我们的电报机器人就创建和配置完毕了。</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Mac 超级好用的输入法 鼠须管！]]></title>
    <link href="https://backup.adao.me/15929738475500.html"/>
    <updated>2020-06-24T12:44:07+08:00</updated>
    <id>https://backup.adao.me/15929738475500.html</id>
    <content type="html"><![CDATA[
<h1 id="toc_0">安装</h1>

<ol>
<li><a href="https://rime.im/" title="鼠须管"><strong>鼠须管官网</strong></a>或者个<a href="https://github.com/rime/squirrel" title="github"><strong>Github</strong></a>下载</li>
<li>安装主程序</li>
<li>重启电脑
<img src="media/15929738475500/Snipaste_2019-06-27_16-02-56.jpg" alt="Snipaste_2019-06-27_16-02-56"/></li>
</ol>

<p>目前就可以正常使用了，我们可以根据自己的需求来定义输入法方案</p>

<blockquote>
<p>可以通过组合键<code>CTRL+~</code>或者F4来进行切换</p>
</blockquote>

<h1 id="toc_1">配置</h1>

<p>配置方面是可以根据自己的需求进行各种高级的自定义，但是对于刚接触的新手来说，会比较困难，这里我们直接采用大神配置好的文件进行设置</p>

<blockquote>
<p><a href="https://scomper.me/gtd/-shu-xu-guan-de-diao-jiao-bi-ji"><strong>「鼠须管」的调教笔记</strong></a>超详细配置教程</p>
</blockquote>

<p>我主要用简化字，就不过多折腾了，直接使用作者提供的配置包以及扩充词典文件</p>

<p>1.<a href="https://www.dropbox.com/s/injkp0ta893oxfd/squirrel-patch.zip" title="配置包以及扩充词典文件"><strong>配置包以及扩充词典文件</strong></a><br/>
2.解压文件<br/>
3.进入到压缩包，全选文件复制<br/>
4.通过上方截图进入到用户设定目录，将刚才复制的所有文件直接复制到此文件下<br/>
5.再点击重新部署即可完成部署</p>

<p><strong>注：每次修改文件都是需要重新部署才可以生效的</strong></p>

<p>这篇文章就是鼠须管输入法编辑的，我这里使用的方案是简化字，感觉还不错，应该也可以满足大部分人的需求，如果想折腾的话，可以试试其他的方案，没准会有更好的体验！</p>

<blockquote>
<p>有人会问：一个输入法有什么好折腾的！</p>

<p>这个输入法是可以给不同的软件设置成不同的方案，配合着配置文件可以。。。。是可以有无限可能的</p>
</blockquote>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Spectacle-Mac系统最好用免费窗口管理软件-中文版]]></title>
    <link href="https://backup.adao.me/15929733535264.html"/>
    <updated>2020-06-24T12:35:53+08:00</updated>
    <id>https://backup.adao.me/15929733535264.html</id>
    <content type="html"><![CDATA[
<h1 id="toc_0">安装包下载</h1>

<blockquote>
<p><a href="https://s3.amazonaws.com/spectacle/downloads/Spectacle+1.2.zip" title="软件安装包">软件安装包</a><br/>
<a href="https://github.com/sanqiit/spectacle/releases/download/1.2/zh_cn.lproj.zip" title="汉化包">汉化包</a><br/>
<a href="https://github.com/eczarny/spectacle" title="项目地址">项目地址</a></p>
</blockquote>

<h1 id="toc_1">安装</h1>

<blockquote>
<p>1.压缩包分别解压<br/>
2.将软件安装包移动到应用程序目录，打开（需要开启允许第三方程序安装）<br/>
3.复制汉化包内所有的文件<br/>
4.应用程序目录右键spectacle，显示包内容，并进入到/Contents/Resources目录下<br/>
5.粘贴汉化包文件</p>
</blockquote>

<p><img src="media/15929733535264/Snipaste_2019-06-28_17-15-44.jpg" alt="Snipaste_2019-06-28_17-15-44"/></p>

<h1 id="toc_2">汉化成功</h1>

<blockquote>
<p>菜单界面</p>
</blockquote>

<p><img src="media/15929733535264/Snipaste_2019-06-28_17-16-20.jpg" alt="Snipaste_2019-06-28_17-16-20"/></p>

<blockquote>
<p>设置界面</p>
</blockquote>

<p><img src="media/15929733535264/Snipaste_2019-06-28_17-17-56.jpg" alt="Snipaste_2019-06-28_17-17-56"/></p>

<p><img src="media/15929733535264/Snipaste_2019-06-28_17-16-50.jpg" alt="Snipaste_2019-06-28_17-16-50"/></p>

<blockquote>
<p>下载的时候软件是英文版本的，使用了一段时间后，感觉软件还不错，就想着找个汉化的版本，google了一圈，没有找到，发现有日语，韩语，芬兰。。。。就是没有中文，虽然使用英文版本也没什么问题，但是总感觉别扭，我就随手汉化了，汉化包也pull了项目，不过感觉不一定会同意，毕竟三年没更新了。。。</p>
</blockquote>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Typecho零基础搭建微信小程序-Wetypecho]]></title>
    <link href="https://backup.adao.me/15929730852412.html"/>
    <updated>2020-06-24T12:31:25+08:00</updated>
    <id>https://backup.adao.me/15929730852412.html</id>
    <content type="html"><![CDATA[
<h1 id="toc_0">Wetypecho开源代码下载地址</h1>

<p><a href="https://github.com/MingliangLu/WeTypecho" title="Wethpecho">Wethpecho</a></p>

<h1 id="toc_1">搭建必要条件</h1>

<p>微信方面</p>

<ul>
<li>域名已备案</li>
<li>网站开启https</li>
</ul>

<p>网站方面</p>

<ul>
<li>设置固定链接</li>
<li>网站开启https</li>
</ul>

<h1 id="toc_2">插件安装</h1>

<ol>
<li>插件安装包下载完成后解压</li>
<li>we-typecho-plugin文件夹重命名为WeTypecho  重要！</li>
<li>然后将修改好的文件夹上传至/usr/plugins目录下</li>
<li>填写好相关数据即可<br/>
注：api密钥自行设定，与小程序端API_SECRET一致即可</li>
</ol>

<h1 id="toc_3">微信小程序</h1>

<ul>
<li>小程序APPID获取</li>
<li>服务器域名填写</li>
</ul>

<p><img src="media/15929730852412/Snipaste_2019-07-18_11-50-47.jpg" alt="Snipaste_2019-07-18_11-50-47"/></p>

<h1 id="toc_4">小程序端配置</h1>

<ul>
<li>进入小程序源码</li>
<li>打开根目录下config.js</li>
</ul>

<pre><code class="language-javascript">var domain = &quot;博客地址&quot;
var name = &quot;小程序页脚名称&quot;
var API_SECRET = &quot;与插件api密钥一致&quot;

export default {
    getdomain: domain,
    getname: name,
    getapisecret: API_SECRET
}
</code></pre>

<p>app.json</p>

<pre><code class="language-markup">{
  &quot;debug&quot;: true,
  &quot;window&quot;: {
    &quot;navigationBarTextStyle&quot;: &quot;black&quot;,
    &quot;navigationBarBackgroundColor&quot;: &quot;#f5f5f5&quot;,
    &quot;navigationBarTitleText&quot;: &quot;小程序名称&quot;,
    &quot;backgroundColor&quot;: &quot;#ffffff&quot;,
    &quot;backgroundTextStyle&quot;: &quot;dark&quot;
  },
</code></pre>

<p>Template/foot.wxml</p>

<pre><code class="language-markup">&lt;template name=&quot;foot&quot;&gt;
    &lt;view class=&quot;footerview&quot;&gt;  
    &lt;text &gt;版权信息&lt;/text&gt;
    &lt;/view&gt;
    &lt;view class=&quot;footerviewwebsite&quot;&gt;  
    &lt;text style&gt;版权信息&lt;/text&gt;
    &lt;/view&gt;
&lt;/template&gt;

</code></pre>

<h1 id="toc_5">常见问题</h1>

<ul>
<li>小程序调试报错：是否备案以及https</li>
<li>图片缩略图不显示：图片是否使用CDN，是否将图片CDN地址添加到微信小程序合法域名，是否CDN白名单等</li>
</ul>

<p>如果检查了上面的问题，依旧不能正常显示图片，就有可能是主题和插件有冲突，本博客的主题就会出现文章添加其他字段后，再发布就会导致缩略图不能正常显示。</p>

<h1 id="toc_6">小程序地址</h1>

<p><img src="media/15929730852412/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E4%BA%8C%E7%BB%B4%E7%A0%81.jpg" alt="小程序二维码"/></p>

<ul>
<li>修改了小程序UI</li>
<li>去除了部分不需要的功能</li>
<li>增加了例如文章内页回到首页的按钮等</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[零基础利用Github免费搭建静态博客-hexo教程]]></title>
    <link href="https://backup.adao.me/15929727149424.html"/>
    <updated>2020-06-24T12:25:14+08:00</updated>
    <id>https://backup.adao.me/15929727149424.html</id>
    <content type="html"><![CDATA[
<p>本次教程演示环境为mac系统，windows系统基本上是同样的步骤，这里就不过多说明了。</p>

<h1 id="toc_0">安装准备</h1>

<p>安装hexo之前，必须先保证电脑中已经安装了以下两款软件：</p>

<ul>
<li><a href="https://nodejs.org" title="node.js">node.js</a></li>
<li>git（会提示安装，同意即可）</li>
</ul>

<h1 id="toc_1">开始安装</h1>

<p>1.打开终端工具，输入以下命令进入到管理员权限：</p>

<pre><code class="language-shell">   sudo su
</code></pre>

<p>2.安装npm，因为国内特殊情况，安装npm会比较缓慢，这里我们使用淘宝的cnpm来进行安装：</p>

<pre><code class="language-shell">npm install -g cnpm --registry=https://registry.npm.taobao.org
</code></pre>

<p>4.安装hexo：</p>

<pre><code class="language-shell">cnpm install -g hexo-cli
</code></pre>

<p>5.查看是否为用户目录，是的话继续操作，否则需要先进入到用户目录（一般为用户名的文件夹）</p>

<p>6.新建目录，这里我创建为blog：</p>

<pre><code class="language-shell">mkdir blog
</code></pre>

<p>7.进入到blog目录：</p>

<pre><code class="language-shell">cd blog
</code></pre>

<p>8.初始化博客：</p>

<pre><code class="language-shell">sudo hexo init
</code></pre>

<blockquote>
<p>提示：INFO  Start blogging with Hexo! 为成功</p>
</blockquote>

<p>9.本地测试：</p>

<pre><code class="language-shell">hexo s
</code></pre>

<blockquote>
<p>显示<br/>
INFO  Start processing<br/>
INFO  Hexo is running at <a href="http://localhost:4000">http://localhost:4000</a> . Press Ctrl+C to stop.</p>
</blockquote>

<p>10.浏览器打开上方地址即可查看hexo博客</p>

<p><img src="https://raw.githubusercontent.com/iadao/img/master/20200624122843.jpg" alt="默认标题_2019-07-18-0"/></p>

<h1 id="toc_2">发布新文章</h1>

<p>1.新建文章</p>

<pre><code class="language-shell">hexo n &quot;文章标题&quot;
</code></pre>

<blockquote>
<p>INFO  Created: /Users/ching/blog/source/_posts/文章标题.md</p>
</blockquote>

<p>2.进入文章（这里我就直接使用vim命令进行编辑,当然也是可以使用其他的Markdown编辑器）</p>

<p>3.按i，并按回车进行编辑，这里我就随意输入一些内容，编辑完成后，按esc，并输入：wq，即可保存</p>

<p>4.返回到blog目录，并进行清理：</p>

<pre><code class="language-shell">hexo clear
</code></pre>

<p>5.生成网站内容</p>

<pre><code class="language-shell">hexo g
</code></pre>

<p>6.再次使用hexo s 命令来启动本地测试，并进行查看是否发布成功<br/>
<img src="https://raw.githubusercontent.com/iadao/img/master/20200624122848.jpg" alt="Snipaste_2019-07-25_19-07-32"/></p>

<h1 id="toc_3">本地网站发到到网络</h1>

<p>今天我们就演示如何将网站发布到github上。</p>

<p>1.登录到github<br/>
2.新建新的仓库</p>

<ul>
<li>右上角+号点击new repository</li>
<li>仓库名：github用户名+github.io</li>
<li>填写好描述</li>
<li>点击create repository 创建即可</li>
</ul>

<p>3.返回到本地终端，并安装插件hexo-deployer-git：</p>

<pre><code class="language-shell">cnpm install --save hexo-deployer-git
</code></pre>

<p>4.打开配置文件：</p>

<pre><code class="language-shell">vim _config.yml
</code></pre>

<p>5.移动到文档末尾，编辑修改：</p>

<blockquote>
<p>deploy:<br/>
  type: git<br/>
  repo: <a href="https://github.com/%E7%94%A8%E6%88%B7%E5%90%8D/%E8%87%AA%E5%AE%9A%E4%B9%89%E5%9C%B0%E5%9D%80.github.io.git">https://github.com/用户名/自定义地址.github.io.git</a><br/>
  branch: master</p>
</blockquote>

<p>6.部署到github：</p>

<pre><code class="language-shell">hexo d
</code></pre>

<blockquote>
<p>输入github账号密码,显示INFO  Deploy done: git为成功</p>
</blockquote>

<p>7.登录到我们的网址进行查看<br/>
<img src="https://raw.githubusercontent.com/iadao/img/master/20200624122854.jpg" alt="Snipaste_2019-07-25_19-55-13"/></p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[navicat-宝塔面板-如何连接MySql数据库]]></title>
    <link href="https://backup.adao.me/15923745890411.html"/>
    <updated>2020-06-17T14:16:29+08:00</updated>
    <id>https://backup.adao.me/15923745890411.html</id>
    <content type="html"><![CDATA[
<ul>
<li>
<a href="#toc_0">进入宝塔管理界面-安全-放行3306端口即可</a>
</li>
<li>
<a href="#toc_1">进入数据库管理界面</a>
</li>
<li>
<a href="#toc_2">编辑用户权限</a>
</li>
<li>
<a href="#toc_3">navicat客户端连接数据库</a>
</li>
</ul>


<h3 id="toc_0">进入宝塔管理界面-安全-放行3306端口即可</h3>

<p><img src="https://raw.githubusercontent.com/iadao/img/master/img/20200617142552.png" alt=""/></p>

<h3 id="toc_1">进入数据库管理界面</h3>

<ol>
<li>点击权限</li>
<li>修改访问权限为所有（会增加安全风险）</li>
<li>提交</li>
</ol>

<p><img src="https://raw.githubusercontent.com/iadao/img/master/img/20200617143533.png" alt=""/></p>

<h3 id="toc_2">编辑用户权限</h3>

<ul>
<li>进入phpMyAdmin
<img src="https://raw.githubusercontent.com/iadao/img/master/img/20200617144002.png" alt=""/></li>
<li>用户</li>
<li>编辑127.0.0.1权限
<img src="https://raw.githubusercontent.com/iadao/img/master/img/20200617144331.png" alt=""/></li>
<li>登录信息</li>
<li>Host修改为任意主机
<img src="https://raw.githubusercontent.com/iadao/img/master/img/20200617144548.png" alt=""/></li>
</ul>

<h3 id="toc_3">navicat客户端连接数据库</h3>

<ol>
<li>左上角连接</li>
<li>MySQL</li>
<li>填写对应信息
<img src="https://raw.githubusercontent.com/iadao/img/master/img/20200617145738.png" alt=""/></li>
</ol>

<p>4.成功连接！<br/>
<img src="https://raw.githubusercontent.com/iadao/img/master/img/20200617150321.png" alt=""/></p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[mac系统-亚马逊云EC2-密钥（免密码）登陆服务器]]></title>
    <link href="https://backup.adao.me/15736510017738.html"/>
    <updated>2019-11-13T21:16:41+08:00</updated>
    <id>https://backup.adao.me/15736510017738.html</id>
    <content type="html"><![CDATA[
<ul>
<li>
<a href="#toc_0">账号注册及服务器创建</a>
</li>
<li>
<a href="#toc_1">本地操作</a>
</li>
</ul>


<h2 id="toc_0">账号注册及服务器创建</h2>

<p>海外版本亚马逊云，服务器所在机房可以选择新加坡或者日本，速度相对快一些</p>

<p>需要注意的是创建秘钥时选择创建新的秘钥并下载保存好。</p>

<h2 id="toc_1">本地操作</h2>

<ol>
<li>移动文件<br/>
将下载好的秘钥保存到下载目录，并改好名字，我这里改成ec2，并移动秘钥文件<br/>
如果没有相关目录，自行创建即可</li>
</ol>

<p><code>mv ~/Downloads/ec2.pem ~/.ssh/ec2.pem</code></p>

<ol>
<li><p>赋权限<br/>
<code>chmod 400 ec2.pem</code></p></li>
<li><p>连接<br/>
<code>ssh -i {您的 .pem 文件的完整路径} ec2-user@{实例 IP 地址}</code></p></li>
</ol>

<p>ssh -i ~/.ssh/ec2.pem centos@1.2.3.4<br/>
注意@前面的名称需要根据自己的服务器系统来修改，我这里是centos7，其他系统请自行修改!</p>

<p><img src="http://img.45share.com/2019/11/29/15750199926835%E9%BB%98%E8%AE%A4%E6%A0%87%E9%A2%98_%E5%85%AC%E4%BC%97%E5%8F%B7%E5%B0%81%E9%9D%A2%E9%A6%96%E5%9B%BE_2019-11-29-0" alt="默认标题_公众号封面首图_2019-11-29-0"/></p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[TinyTinyRss数据迁移-宝塔环境]]></title>
    <link href="https://backup.adao.me/15734644135427.html"/>
    <updated>2019-11-11T17:26:53+08:00</updated>
    <id>https://backup.adao.me/15734644135427.html</id>
    <content type="html"><![CDATA[
<p>1.网站根目录整体备份<br/>
2.数据库数据导出<br/>
3.新建网站<br/>
4.导入旧数据和数据库<br/>
5.修改config.php中数据库相关信息<br/>
6.旧网站是https，新站也需要开启<br/>
7.开启phpfileinfo<br/>
8.开启自动更新<br/>
 8.1 crontab -u www -e<br/>
 8.2 */30 * * * * www-data /usr/bin/php /var/www/ttrss/update.php --feeds --quiet  并修改权限<br/>
 8.3  重新加载及重启   运行状态<br/>
       service crond reload<br/>
       service crond restart <br/>
       tail -f /var/log/cron </p>

<p>9.UPDATE ttrss_feeds SET feed_url = replace(feed_url, &#39;rsshub.haixing.link&#39;, &#39;rsshub.adao.me&#39;)</p>

<p><img src="http://img.45share.com/2020/02/05/15808899394071%E9%BB%98%E8%AE%A4%E6%A0%87%E9%A2%98_%E5%85%AC%E4%BC%97%E5%8F%B7%E5%B0%81%E9%9D%A2%E9%A6%96%E5%9B%BE_2020-02-05-0" alt="默认标题_公众号封面首图_2020-02-05-0"/></p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Typecho博客迁移及报错解决-宝塔环境]]></title>
    <link href="https://backup.adao.me/15725819388076.html"/>
    <updated>2019-11-01T12:18:58+08:00</updated>
    <id>https://backup.adao.me/15725819388076.html</id>
    <content type="html"><![CDATA[
<ul>
<li>
<a href="#toc_0">原始网站数据备份</a>
</li>
<li>
<a href="#toc_1">新服务器部署</a>
</li>
<li>
<a href="#toc_2">一切正常~</a>
</li>
</ul>


<p>这两天收到阿里云的信息，提示我虚拟主机要过期了，我就在考虑要不要续费，其实自己早就有想法把所有的网站都放到一起了，毕竟自己有vultr的vps，配置上放自己的这些网站也没有任何问题，主要就是备案的问题，这是真的坑啊。。没有备案就不能使用国内的cdn服务，自己的小程序也不能正常运行了，还是一件比较尴尬的事情。后来考虑了一下，还是先放到美国的vps里面吧，后来在考虑换到国内的云服务器，估计到时候还要重新备案。</p>

<p>对了！还有一个很重要的原因。。。就是我的域名是me，国内不能备案</p>

<p>下面就是我这次迁移服务器的过程和遇到的一些坑，算是做一次记录，没准也可以帮助遇到同样问题的小伙伴。</p>

<h3 id="toc_0">原始网站数据备份</h3>

<p>1.通过FTP工具将网站所有数据都打包下载。<br/>
2.通过阿里云自带的数据库管理工具将数据库全部备份下来，所有的表！utf8编码！<br/>
2.1这里注意一点，我在导入旧数据库到新的服务器时，有一段报错</p>

<blockquote>
<p>T FOREIGN_KEY_CHECKS = 0;</p>
</blockquote>

<p>mysql 启动和关闭外键约束的方法，去掉即可</p>

<ul>
<li>方法（通过数据库管理工具的命令行执行）<br/>
&gt; SET FOREIGN_KEY_CHECKS = 0<br/>
&gt; SET FOREIGN_KEY_CHECKS = 1</li>
</ul>

<p>如果没有报错，继续正常操作即可，如果有上方的报错就执行上方的命令后重新导出数据库</p>

<h3 id="toc_1">新服务器部署</h3>

<p>我的服务器是centos7，部署了宝塔，都9102年了，还敲命令行啊！！（主要是我自己太懒。。。）</p>

<p>1.使用宝塔自带的一键部署源码工具直接部署typecho！因为我之前的php版本为5.5，这里部署的时候我也选择了5.5。避免出现更多的问题！</p>

<p>2.部署成功后，进入到PHPmyadmin，先删除全部的表！然后导入之前备份的数据库！如果出现什么500报错，检查下config.inc.php是否设置正确</p>

<p>3.网站后台关闭地址重写（伪静态功能）</p>

<p>4.网站地址改为http</p>

<p>5.导入旧typecho的usr目录到你的新网站根目录进行替换！</p>

<p>6.宝塔管理面板开启伪静态（直接选择typecho即可）</p>

<p>7.typecho网站后台开启伪静态（确定伪静态设置正确的情况下强制开启即可）</p>

<p>7.网站地址改为https</p>

<p>8.宝塔开启https，我使用的是cloudflare的证书，部署证书成功后，强制跳转https即可！</p>

<h3 id="toc_2">一切正常~</h3>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[小娱路由器-刷机、外壳DIY-避坑指南]]></title>
    <link href="https://backup.adao.me/15692437450567.html"/>
    <updated>2019-09-23T21:02:25+08:00</updated>
    <id>https://backup.adao.me/15692437450567.html</id>
    <content type="html"><![CDATA[
<ul>
<li>
<a href="#toc_0">直接刷入不死（breed）</a>
<ul>
<li>
<a href="#toc_1">提示刷入成功后，重启路由</a>
</li>
<li>
<a href="#toc_2">ip修改</a>
</li>
<li>
<a href="#toc_3">成功界面</a>
</li>
</ul>
</li>
<li>
<a href="#toc_4">刷入固件</a>
<ul>
<li>
<a href="#toc_5">bin固件上传</a>
</li>
<li>
<a href="#toc_6">刷写</a>
<ul>
<li>
<a href="#toc_7">修改IP</a>
</li>
<li>
<a href="#toc_8">修改主题和固件功能展示</a>
</li>
<li>
<a href="#toc_9">基本设置（接好网线）</a>
</li>
</ul>
</li>
</ul>
</li>
<li>
<a href="#toc_10">外壳DIY</a>
<ul>
<li>
<a href="#toc_11">图纸绘制</a>
</li>
<li>
<a href="#toc_12">配件购买及亚克力定制加工</a>
<ul>
<li>
<a href="#toc_13">配件清单</a>
</li>
<li>
<a href="#toc_14">配件及亚克力</a>
</li>
<li>
<a href="#toc_15">拆主板</a>
</li>
<li>
<a href="#toc_16">配件单独展示</a>
</li>
<li>
<a href="#toc_17">焊好开关和电源</a>
</li>
</ul>
</li>
<li>
<a href="#toc_18">成品展示</a>
</li>
</ul>
</li>
<li>
<a href="#toc_19">结束语</a>
<ul>
<li>
<ul>
<li>
<a href="#toc_20">使用小娱C3+自编固件已经两周，目前还没发现任何问题。</a>
</li>
<li>
<a href="#toc_21">虽然文章标题是“避坑指南”，但是只能说是记录下折腾的过程，顺便分享给大家~</a>
</li>
</ul>
</li>
</ul>
</li>
</ul>


<h1 id="toc_0">直接刷入不死（breed）</h1>

<blockquote>
<p>这步可以直接参考论坛文章（<a href="http://bbs.nas66.com/thread-707-1-1.html">小娱加速链刷机记录全过程！</a>）</p>
</blockquote>

<h2 id="toc_1">提示刷入成功后，重启路由</h2>

<h2 id="toc_2">ip修改</h2>

<p><img src="https://cdn.jsdelivr.net/gh/iadao/img//img/15732226467580%E6%8D%95%E8%8E%B7-20200622153319793.png" alt="捕获"/></p>

<h2 id="toc_3">成功界面</h2>

<p><img src="https://cdn.jsdelivr.net/gh/iadao/img//img/15732226467610%E6%8D%95%E8%8E%B71-20200622153332013.png" alt="捕获1"/></p>

<h1 id="toc_4">刷入固件</h1>

<h2 id="toc_5">bin固件上传</h2>

<p>这里我没有选择各大网站编译好的固件，而是选择自己编译固件，主要是我需要的功能比较少，满足正常上网和科学上网即可。</p>

<p><img src="https://cdn.jsdelivr.net/gh/iadao/img//img/15732226467624Snipaste_2019-11-08_20-51-16-20200622153342383.jpeg" alt="Snipaste_2019-11-08_20-51-16"/></p>

<ul>
<li>勾选固件</li>
<li>选择自己喜欢的固件（.bin文件）</li>
<li>确定自动重启勾选</li>
<li>点击上传</li>
</ul>

<h2 id="toc_6">刷写</h2>

<blockquote>
<p>上传成功后显示以下界面，点击更新</p>
</blockquote>

<p><img src="https://cdn.jsdelivr.net/gh/iadao/img//img/15732226467638%E6%8D%95%E8%8E%B72-20200622153351883.png" alt="捕获2"/></p>

<blockquote>
<p>等待更新完毕</p>
</blockquote>

<p><img src="https://cdn.jsdelivr.net/gh/iadao/img//img/15732226467652%E6%8D%95%E8%8E%B73-20200622153405213.png" alt="捕获3"/></p>

<h3 id="toc_7">修改IP</h3>

<p><img src="https://cdn.jsdelivr.net/gh/iadao/img//img/15732226467664%E6%8D%95%E8%8E%B74-20200622153413243.png" alt="捕获4"/></p>

<ul>
<li>注：因为这是我自己编译的固件，所以默认ip修改了，大家的可以根据自己的固件来修改即可，网关为固件默认ip，ip地址设置为同网段即可。</li>
</ul>

<blockquote>
<p>进入管理后台（我的用户名为root，密码为password）<br/>
默认主题界面</p>
</blockquote>

<p><img src="https://cdn.jsdelivr.net/gh/iadao/img//img/15732226467675%E6%8D%95%E8%8E%B76-20200622153420753.png" alt="捕获6"/></p>

<blockquote>
<p>修改密码，修改主题（我自己感觉Argon还挺好看的，就在编译的时候直接集成到固件里面了）</p>
</blockquote>

<h3 id="toc_8">修改主题和固件功能展示</h3>

<blockquote>
<p>什么？不知道在哪里修改？？（系统-语言和界面）</p>
</blockquote>

<p><img src="https://cdn.jsdelivr.net/gh/iadao/img//img/15732226467689Snipaste_2019-10-30_20-18-15-20200622153426304.jpeg" alt="Snipaste_2019-10-30_20-18-15"/></p>

<blockquote>
<p>修改密码</p>

<p><img src="https://cdn.jsdelivr.net/gh/iadao/img//img/15732226467702Snipaste_2019-10-30_20-17-24-20200622153439334.jpeg" alt="Snipaste_2019-10-30_20-17-24"/></p>
</blockquote>

<h3 id="toc_9">基本设置（接好网线）</h3>

<ul>
<li>切换为PPPoE协议（我这里是拨号的）</li>
</ul>

<p><img src="https://cdn.jsdelivr.net/gh/iadao/img//img/15732226467715Snipaste_2019-10-30_20-20-19-20200622153626514.jpeg" alt="Snipaste_2019-10-30_20-20-19"/></p>

<ul>
<li><p>简单设置LAN<br/>
<img src="https://cdn.jsdelivr.net/gh/iadao/img//img/15732226467729Snipaste_2019-11-08_21-21-38-20200622153634965.jpeg" alt="Snipaste_2019-11-08_21-21-38"/></p></li>
<li><p>根据需求修改，我是当主路由，所以开启了DHCP。<br/>
<img src="https://cdn.jsdelivr.net/gh/iadao/img//img/15732226467741Snipaste_2019-11-08_21-22-01-20200622153645025.jpeg" alt="Snipaste_2019-11-08_21-22-01"/></p></li>
<li><p>勾选<br/>
<img src="https://cdn.jsdelivr.net/gh/iadao/img//img/15732226467753Snipaste_2019-11-08_21-22-17-20200622153654995.jpeg" alt="Snipaste_2019-11-08_21-22-17"/></p></li>
<li><p>我不需要ipv6，这里全部禁用（听说开启后会有一定bug，这里我也没法测试）<br/>
<img src="https://cdn.jsdelivr.net/gh/iadao/img//img/15732226467773Snipaste_2019-11-08_21-22-24-20200622153711235.jpeg" alt="Snipaste_2019-11-08_21-22-24"/></p></li>
</ul>

<p>正常上网~</p>

<h1 id="toc_10">外壳DIY</h1>

<h2 id="toc_11">图纸绘制</h2>

<p>相关尺寸我并没有自己测量，直接用了网上的diy大佬的图纸修改的，毕竟自己用。。。要是图纸尺寸有问题，真的很折腾，不知道作者有没有在这个论坛里面，也非常感谢原作者对我的帮助~</p>

<ul>
<li>图纸展示（原作者上面的亚克力板是有散热，因为我不加硬盘，所以散热应该没什么问题。。。当然了我没办法上硬盘。。后面会说原因）
<img src="https://cdn.jsdelivr.net/gh/iadao/img//img/15732226467790Snipaste_2019-11-08_21-29-31-20200622153719745.jpeg" alt="Snipaste_2019-11-08_21-29-31"/></li>
</ul>

<h2 id="toc_12">配件购买及亚克力定制加工</h2>

<h3 id="toc_13">配件清单</h3>

<ul>
<li>热缩管</li>
<li>螺丝M3x6</li>
<li>双通铜柱M3x25</li>
<li>铜柱M3x5+6</li>
<li>dc插头公头（5.5x2.5 12V1.5A）</li>
<li>dc插头母头（5.5x2.5）</li>
<li>VH3.96mm接头</li>
<li>亚克力板（3mm）</li>
<li>电烙铁（以前3块钱买的。。。真的不好用）</li>
<li>12v自锁开关（12mm）</li>
</ul>

<h3 id="toc_14">配件及亚克力</h3>

<p><img src="https://cdn.jsdelivr.net/gh/iadao/img//img/15732226467817IMG_3936-20200622153731107.jpeg" alt="IMG_3936"/></p>

<h3 id="toc_15">拆主板</h3>

<blockquote>
<p>MT7621A</p>
</blockquote>

<p><img src="https://cdn.jsdelivr.net/gh/iadao/img//img/15732226467859DSC_5752-20200622153803360.jpeg" alt="DSC_5752"/><br/>
<img src="https://cdn.jsdelivr.net/gh/iadao/img//img/15732226467888DSC_5749-20200622153830148.jpeg" alt="DSC_5749"/></p>

<blockquote>
<p>当时买的时候以为C3和C1C5主板是一样的。。。这个卖家也说除了硬盘架都是一样的。。到手后发现。。。</p>
</blockquote>

<p><img src="https://cdn.jsdelivr.net/gh/iadao/img//img/15732226467923DSC_5754-20200622153858300.jpeg" alt="DSC_5754"/></p>

<ul>
<li>这是真的一样啊，就当没看见。。。</li>
</ul>

<h3 id="toc_16">配件单独展示</h3>

<ul>
<li>螺丝M3x6</li>
</ul>

<p><img src="https://cdn.jsdelivr.net/gh/iadao/img//img/15732226467953DSC_5742-20200622153924898.jpeg" alt="DSC_5742"/></p>

<ul>
<li>铜柱M3x5+6</li>
</ul>

<p><img src="https://cdn.jsdelivr.net/gh/iadao/img//img/15732226467990DSC_5743-20200622153945949.jpeg" alt="DSC_5743"/></p>

<ul>
<li>双通铜柱M3x25</li>
</ul>

<p><img src="https://cdn.jsdelivr.net/gh/iadao/img//img/15732226468021DSC_5744-20200622154008921.jpeg" alt="DSC_5744"/></p>

<ul>
<li>dc插头母头（5.5x2.5）</li>
</ul>

<p><img src="https://cdn.jsdelivr.net/gh/iadao/img//img/15732226468054DSC_5745-20200622154032079.jpeg" alt="DSC_5745"/></p>

<ul>
<li>12v自锁开关（12mm）</li>
</ul>

<p><img src="https://cdn.jsdelivr.net/gh/iadao/img//img/15732226468091DSC_5746-20200622154052482.jpeg" alt="DSC_5746"/></p>

<ul>
<li>VH3.96mm接头</li>
</ul>

<p><img src="https://cdn.jsdelivr.net/gh/iadao/img//img/15732226468134DSC_5747-20200622154159249.jpeg" alt="DSC_5747"/></p>

<h3 id="toc_17">焊好开关和电源</h3>

<ul>
<li>千万要看好亚克力的里外面。。。我这张图片就反了。。后面又重新焊了一次</li>
</ul>

<p><img src="https://cdn.jsdelivr.net/gh/iadao/img//img/15732226468168DSC_5757-20200622154223232.jpeg" alt="DSC_5757"/></p>

<ul>
<li>测试正常后，进行拼装。</li>
</ul>

<h2 id="toc_18">成品展示</h2>

<p><img src="https://cdn.jsdelivr.net/gh/iadao/img//img/15732226468203IMG_3281-20200622154248269.jpeg" alt="IMG_3281"/><br/>
<img src="https://cdn.jsdelivr.net/gh/iadao/img//img/15732226468242DSC_5769-20200622154434641.jpeg" alt="DSC_5769"/><br/>
<img src="https://cdn.jsdelivr.net/gh/iadao/img//img/15732226468295DSC_5763-20200622154458310.jpeg" alt="DSC_5763"/></p>

<h1 id="toc_19">结束语</h1>

<h3 id="toc_20">使用小娱C3+自编固件已经两周，目前还没发现任何问题。</h3>

<h3 id="toc_21">虽然文章标题是“避坑指南”，但是只能说是记录下折腾的过程，顺便分享给大家~</h3>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Rsshub部署及使用方法-Rss订阅源生成神器-宝塔环境]]></title>
    <link href="https://backup.adao.me/15692243361535.html"/>
    <updated>2019-09-23T15:38:56+08:00</updated>
    <id>https://backup.adao.me/15692243361535.html</id>
    <content type="html"><![CDATA[
<ul>
<li>
<a href="#toc_0">搭建环境</a>
</li>
<li>
<a href="#toc_1">开始部署</a>
<ul>
<li>
<a href="#toc_2">源码下载</a>
<ul>
<li>
<a href="#toc_3">下载Rsshub源码：</a>
</li>
</ul>
</li>
<li>
<a href="#toc_4">安装依赖：</a>
</li>
<li>
<a href="#toc_5">端口占用解除：</a>
</li>
<li>
<a href="#toc_6">后台运行</a>
<ul>
<li>
<a href="#toc_7">screen命令</a>
</li>
</ul>
</li>
<li>
<a href="#toc_8">部署成功</a>
</li>
</ul>
</li>
</ul>


<h2 id="toc_0">搭建环境</h2>

<p><a href="https://www.vultr.com/?ref=7504046">Vultr</a>的vps主机，并安装了宝塔面板（不安装也是可以的，只是为了相关配置可以更简单一点）</p>

<h2 id="toc_1">开始部署</h2>

<h3 id="toc_2">源码下载</h3>

<p>通过ssh登录到服务器（我这里使用的是mac，可以直接使用下面的命令登陆，Windows可以使用Putty）</p>

<p><code>$ ssh root@127.0.0.1</code></p>

<h4 id="toc_3">下载Rsshub源码：</h4>

<p><code>$ git clone https://github.com/DIYgod/RSSHub.git<br/>
 $ cd RSSHub/</code></p>

<h3 id="toc_4">安装依赖：</h3>

<p><code>$ npm install</code></p>

<p>或者yarn：</p>

<p><code>$ yarn</code></p>

<p>这个时候我们就可以启动Rsshub：</p>

<p><code>$ npm start</code></p>

<p>或：</p>

<p><code>$ yarn start</code></p>

<p>再或者：</p>

<p><code>$ pm2 start lib/index.js --name rsshub</code></p>

<h3 id="toc_5">端口占用解除：</h3>

<p>因为之前安装过，所以我这里使用npm启动的时候，会显示以下报错：</p>

<blockquote>
<p>error: uncaughtException: Error: listen EADDRINUSE: address already in use :::1200</p>
</blockquote>

<p>意思就是1200端口被占用了，这里我们就需要先解除占用</p>

<p>使用命令查询1200端口占用的pid：</p>

<p><code>$ netstat -lnp|grep 1200</code></p>

<p>显示以下内容：</p>

<blockquote>
<p>tcp6       0      0 :::1200                 :::*                    LISTEN      20959/node</p>
</blockquote>

<p>在使用命令查询进程详细情况：</p>

<p><code>$ ps 20959</code></p>

<blockquote>
<p>20959 pts/2    Sl+   11:13 node lib/index.js</p>

<p>确认为rsshub，这里我们再使用命令杀死进程：</p>
</blockquote>

<p><code>$ kill -9 20959</code> #-9 表示强制终止进程</p>

<p>再次运行启动命令：</p>

<blockquote>
<p>info: Listening Port 1200<br/>
info: RSSHub start! Cheers!</p>
</blockquote>

<p>启动成功</p>

<h3 id="toc_6">后台运行</h3>

<h4 id="toc_7">screen命令</h4>

<p>创建窗口：</p>

<p><code>$ screen -S rsshub<br/>
$ npm start</code></p>

<p>启动成功后，可以按住Ctrl键后，再按A+d键即可退出当先窗口，rsshub就会在后台进行运行了，我们可以使用命令来查询screen后台运行的情况：</p>

<p><code>$ screen -ls</code></p>

<p>也可以使用命令进行恢复：</p>

<p><code>$ screen -r 程序id</code></p>

<h3 id="toc_8">部署成功</h3>

<p>访问 <a href="http://127.0.0.1:1200/">http://127.0.0.1:1200/</a></p>

<p><img src="https://raw.githubusercontent.com/iadao/img/master/20200622160719.jpg" alt="Snipaste_2019-09-23_16-42-29"/></p>

]]></content>
  </entry>
  
</feed>
